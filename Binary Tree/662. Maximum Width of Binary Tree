/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long maxi = 1;
    typedef unsigned long long ll;
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode* , ll>>q;
        q.push({root , 0});

        while(!q.empty()) {
            int size = q.size();
            ll left = q.front().second;
            ll right = q.back().second;
            
            if(maxi < right - left + 1) {
                maxi = right - left + 1;
            }
            

            while(size--) {
                auto temp = q.front();
                q.pop();
                TreeNode *node = temp.first;
                ll idx = temp.second;

                if(node->left) {
                    q.push({node->left , 2*idx + 1});
                }

                if(node->right) {
                    q.push({node->right , 2*idx + 2});
                }
            }
        }
        return maxi;
    }
};
