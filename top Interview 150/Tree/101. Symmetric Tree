/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool solve(TreeNode *p , TreeNode *q) {
        if(p == NULL && q == NULL) {
            return true;
        }

        if(p != NULL && q == NULL || p == NULL && q != NULL || p->val != q->val) {
            return false;
        }

        bool left;
        bool right;

        if(p->val == q->val) {
            left = solve(p->left , q->right);
            right = solve(p->right , q->left);
        }

        return left && right;
    }

    bool isSymmetric(TreeNode* root) {
        if(root == NULL) {
            return true;
        }

        TreeNode *p = root->left;
        TreeNode *q = root->right;

        return solve(p , q);
    }
};
