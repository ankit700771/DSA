class Solution {
public:

    int BinarySearch(vector<int>&nums , int target){
        int ans = -1;

        int start = 0; 
        int end = nums.size() - 1;

        while(start <= end){
            int mid = (start + end)/2;

            if(nums[mid] >= target){
                ans = mid;
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return ans;
    }

    int hIndex(vector<int>& nums) {
        sort(nums.begin() , nums.end());
        int n = nums.size();
        int maxValue = INT_MIN;
        int maxReach = *max_element(nums.begin() , nums.end());

        for(int i = 1; i<=maxReach; i++){
            int ans = BinarySearch(nums , i);
            if(n - ans >= i){
                maxValue = max(maxValue , i);
            }
            else{
                break;
            }
        }
        if(maxValue == INT_MIN) return 0;
        return maxValue;
    }
};
